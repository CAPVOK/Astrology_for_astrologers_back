basePath: /
definitions:
  model.ConstellationGetResponse:
    properties:
      confirmation_date:
        type: string
      creation_date:
        type: string
      end_date:
        type: string
      formation_date:
        type: string
      full_name:
        type: string
      id:
        type: integer
      name:
        type: string
      planets:
        items:
          $ref: '#/definitions/model.PlanetInConstellation'
        type: array
      start_date:
        type: string
      status:
        type: string
    type: object
  model.ConstellationRequest:
    properties:
      confirmation_date:
        type: string
      creation_date:
        type: string
      end_date:
        type: string
      formation_date:
        type: string
      full_name:
        type: string
      id:
        type: integer
      name:
        type: string
      start_date:
        type: string
      status:
        type: string
    type: object
  model.ConstellationUpdateRequest:
    properties:
      end_date:
        type: string
      name:
        type: string
      start_date:
        type: string
    type: object
  model.ConstellationUpdateStatusRequest:
    properties:
      constellationStatus:
        type: string
    type: object
  model.ErrorResponse:
    properties:
      error:
        type: string
    type: object
  model.Planet:
    properties:
      color1:
        example: '#ababab'
        type: string
      color2:
        example: '#8a8a8a'
        type: string
      discovered:
        example: Неизвестно
        type: string
      distance:
        example: Неизвестно
        type: string
      imageName:
        example: http://example.com/mars.jpg
        type: string
      info:
        example: Неизвестно
        type: string
      mass:
        example: Неизвестно
        type: string
      name:
        example: Планета
        type: string
      planetId:
        type: integer
      status:
        example: активна
        type: string
    type: object
  model.PlanetInConstellation:
    properties:
      color1:
        example: '#ababab'
        type: string
      color2:
        example: '#8a8a8a'
        type: string
      id:
        type: string
      imageName:
        example: http://example.com/mars.jpg
        type: string
      name:
        example: Планета
        type: string
    type: object
  model.PlanetRequest:
    properties:
      color1:
        example: '#ababab'
        type: string
      color2:
        example: '#8a8a8a'
        type: string
      discovered:
        example: Неизвестно
        type: string
      distance:
        example: Неизвестно
        type: string
      info:
        example: Неизвестно
        type: string
      mass:
        example: Неизвестно
        type: string
      name:
        example: Планета
        type: string
    type: object
  model.PlanetsGetResponse:
    properties:
      constellationId:
        example: 1
        type: integer
      planets:
        items:
          $ref: '#/definitions/model.Planet'
        type: array
    type: object
  model.Role:
    enum:
    - пользователь
    - модератор
    type: string
    x-enum-varnames:
    - UserRole
    - ModeratorRole
  model.UserLoginRequest:
    properties:
      email:
        type: string
      password:
        type: string
    type: object
  model.UserLoginResponse:
    properties:
      access_token:
        type: string
      full_name:
        type: string
      role:
        $ref: '#/definitions/model.Role'
    type: object
  model.UserRegisterRequest:
    properties:
      email:
        type: string
      fullName:
        type: string
      password:
        type: string
    type: object
host: http://localhost:8081
info:
  contact: {}
  description: API server for Space application
  title: BagTracker RestAPI
  version: "1.0"
paths:
  /constellation:
    get:
      description: Возвращает список всех не удаленных созвездий
      parameters:
      - description: Начало даты формирования
        format: email
        in: query
        name: startFormationDate
        type: string
      - description: Конец даты формирования
        format: email
        in: query
        name: endFormationDate
        type: string
      - description: Статус созвездия
        format: email
        in: query
        name: constellationStatus
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Список созвездий
          schema:
            $ref: '#/definitions/model.ConstellationRequest'
        "400":
          description: Обработанная ошибка сервера
          schema:
            $ref: '#/definitions/model.ErrorResponse'
        "401":
          description: Пользователь не авторизован
          schema:
            $ref: '#/definitions/model.ErrorResponse'
        "500":
          description: Внутренняя ошибка сервера
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Получение списка созвездий
      tags:
      - Созвездие
  /constellation/{constellation_id}:
    get:
      description: Возвращает информацию о созвездии по её идентификатору
      parameters:
      - description: Идентификатор созвездия
        in: path
        name: constellation_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Информация о созвездии
          schema:
            $ref: '#/definitions/model.ConstellationGetResponse'
        "400":
          description: Обработанная ошибка сервера
          schema:
            $ref: '#/definitions/model.ErrorResponse'
        "401":
          description: Пользователь не авторизован
          schema:
            $ref: '#/definitions/model.ErrorResponse'
        "500":
          description: Внутренняя ошибка сервера
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Получение созвездия по идентификатору
      tags:
      - Созвездие
  /constellation/{constellation_id}/delete:
    delete:
      description: Удаляет доставку по её идентификатору
      parameters:
      - description: Идентификатор созвездия
        in: path
        name: id
        required: true
        type: integer
      - description: Начало даты формирования
        format: email
        in: query
        name: startFormationDate
        type: string
      - description: Конец даты формирования
        format: email
        in: query
        name: endFormationDate
        type: string
      - description: Статус созвездия
        format: email
        in: query
        name: constellationStatus
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Список багажей
          schema:
            $ref: '#/definitions/model.ConstellationRequest'
        "400":
          description: Обработанная ошибка сервера
          schema:
            $ref: '#/definitions/model.ErrorResponse'
        "401":
          description: Пользователь не авторизован
          schema:
            $ref: '#/definitions/model.ErrorResponse'
        "500":
          description: Внутренняя ошибка сервера
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Удаление созвездия
      tags:
      - Созвездие
  /constellation/{constellation_id}/status/moderator:
    put:
      description: Обновляет статус чернового созвездия для юзера и обновляет статус
        созвездия по идентификатору созвездия и новому статусу для модератора
      parameters:
      - description: Идентификатор созвездия
        in: path
        name: constellation_id
        required: true
        type: integer
      - description: Новый статус созвездия
        in: body
        name: constellationStatus
        required: true
        schema:
          $ref: '#/definitions/model.ConstellationUpdateStatusRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Информация о созвездии
          schema:
            $ref: '#/definitions/model.ConstellationGetResponse'
        "400":
          description: Обработанная ошибка сервера
          schema:
            $ref: '#/definitions/model.ErrorResponse'
        "401":
          description: Пользователь не авторизован
          schema:
            $ref: '#/definitions/model.ErrorResponse'
        "500":
          description: Внутренняя ошибка сервера
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Обновление статуса созвездия
      tags:
      - Созвездие
  /constellation/{constellation_id}/update:
    put:
      description: Обновляет поля созвездия по её идентификатору
      parameters:
      - description: Идентификатор созвездия
        in: path
        name: constellation_id
        required: true
        type: integer
      - description: Новое созвездие
        in: body
        name: newConstellation
        required: true
        schema:
          $ref: '#/definitions/model.ConstellationUpdateRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Информация о созвездии
          schema:
            $ref: '#/definitions/model.ConstellationGetResponse'
        "400":
          description: Обработанная ошибка сервера
          schema:
            $ref: '#/definitions/model.ErrorResponse'
        "401":
          description: Пользователь не авторизован
          schema:
            $ref: '#/definitions/model.ErrorResponse'
        "500":
          description: Внутренняя ошибка сервера
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Обновление созвездие
      tags:
      - Созвездие
  /planet:
    get:
      description: Возращает список всех активных планет и ид черновой заявки
      parameters:
      - description: Название планеты
        format: email
        in: query
        name: searchName
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Список планет
          schema:
            $ref: '#/definitions/model.PlanetsGetResponse'
        "400":
          description: Обработанная ошибка сервера
          schema:
            $ref: '#/definitions/model.ErrorResponse'
        "500":
          description: Внутренняя ошибка сервера
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Получение списка планет
      tags:
      - Планета
  /planet/{planet_id}:
    get:
      description: Возвращает информацию о планете по ее ID
      parameters:
      - description: ID планетаа
        in: path
        name: planet_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Информация о планетае
          schema:
            $ref: '#/definitions/model.Planet'
        "400":
          description: Обработанная ошибка сервера
          schema:
            $ref: '#/definitions/model.ErrorResponse'
        "500":
          description: Внутренняя ошибка сервера
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Получение планеты по ID
      tags:
      - Планета
  /planet/{planet_id}/constellation:
    delete:
      description: Удаляет планета из созвездия по еe ID
      parameters:
      - description: ID планеты
        in: path
        name: planet_id
        required: true
        type: integer
      - description: Код планеты
        format: email
        in: query
        name: searchName
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Список планет
          schema:
            $ref: '#/definitions/model.PlanetsGetResponse'
        "400":
          description: Обработанная ошибка сервера
          schema:
            $ref: '#/definitions/model.ErrorResponse'
        "401":
          description: Пользователь не авторизован
          schema:
            $ref: '#/definitions/model.ErrorResponse'
        "500":
          description: Внутренняя ошибка сервера
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Удаление планеты из созвездия
      tags:
      - Планета
    post:
      description: Добавляет планету к созвездию по ее ID
      parameters:
      - description: ID планеты
        in: path
        name: planet_id
        required: true
        type: integer
      - description: Код планеты
        format: email
        in: query
        name: searchName
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Список планет
          schema:
            $ref: '#/definitions/model.PlanetsGetResponse'
        "400":
          description: Обработанная ошибка сервера
          schema:
            $ref: '#/definitions/model.ErrorResponse'
        "401":
          description: Пользователь не авторизован
          schema:
            $ref: '#/definitions/model.ErrorResponse'
        "500":
          description: Внутренняя ошибка сервера
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Добавление планеты к созвездии
      tags:
      - Планета
  /planet/{planet_id}/delete:
    delete:
      description: Удаляет планету по его ID
      parameters:
      - description: ID планетаа
        in: path
        name: planet_id
        required: true
        type: integer
      - description: Название планеты
        format: email
        in: query
        name: searchName
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Список планет
          schema:
            $ref: '#/definitions/model.PlanetsGetResponse'
        "400":
          description: Обработанная ошибка сервера
          schema:
            $ref: '#/definitions/model.ErrorResponse'
        "401":
          description: Пользователь не авторизован
          schema:
            $ref: '#/definitions/model.ErrorResponse'
        "403":
          description: У пользователя нет прав для этого запроса
          schema:
            $ref: '#/definitions/model.ErrorResponse'
        "500":
          description: Внутренняя ошибка сервера
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Удаление планеты
      tags:
      - Планета
  /planet/{planet_id}/image:
    post:
      consumes:
      - multipart/form-data
      description: Добавляет изображение к планете по ее ID
      parameters:
      - description: ID планета
        in: path
        name: planet_id
        required: true
        type: integer
      - description: Изображение планеты
        in: formData
        name: image
        required: true
        type: file
      produces:
      - application/json
      responses:
        "200":
          description: Информация о планете с изображением
          schema:
            $ref: '#/definitions/model.Planet'
        "400":
          description: Обработанная ошибка сервера
          schema:
            $ref: '#/definitions/model.ErrorResponse'
        "401":
          description: Пользователь не авторизован
          schema:
            $ref: '#/definitions/model.ErrorResponse'
        "403":
          description: У пользователя нет прав для этого запроса
          schema:
            $ref: '#/definitions/model.ErrorResponse'
        "500":
          description: Внутренняя ошибка сервера
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Добавление изображения к планете
      tags:
      - Планета
  /planet/{planet_id}/update:
    put:
      consumes:
      - application/json
      description: Обновляет информацию о планетe по его ID
      parameters:
      - description: ID планеты
        in: path
        name: planet_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Информация о планетe
          schema:
            $ref: '#/definitions/model.Planet'
        "400":
          description: Обработанная ошибка сервера
          schema:
            $ref: '#/definitions/model.ErrorResponse'
        "401":
          description: Пользователь не авторизован
          schema:
            $ref: '#/definitions/model.ErrorResponse'
        "403":
          description: У пользователя нет прав для этого запроса
          schema:
            $ref: '#/definitions/model.ErrorResponse'
        "500":
          description: Внутренняя ошибка сервера
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Обновление информации о планетe
      tags:
      - Планета
  /planet/create:
    post:
      consumes:
      - application/json
      description: Создает новый планета с предоставленными данными
      parameters:
      - description: Код планетаа
        format: email
        in: query
        name: searchCode
        type: string
      - description: Пользовательский объект в формате JSON
        in: body
        name: planet
        required: true
        schema:
          $ref: '#/definitions/model.PlanetRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Список планетаей
          schema:
            $ref: '#/definitions/model.PlanetsGetResponse'
        "400":
          description: Обработанная ошибка сервера
          schema:
            $ref: '#/definitions/model.ErrorResponse'
        "401":
          description: Пользователь не авторизован
          schema:
            $ref: '#/definitions/model.ErrorResponse'
        "403":
          description: У пользователя нет прав для этого запроса
          schema:
            $ref: '#/definitions/model.ErrorResponse'
        "500":
          description: Внутренняя ошибка сервера
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Создание нового планетаа
      tags:
      - Планета
  /user/login:
    post:
      consumes:
      - application/json
      description: Авторизация пользователя и генерация JWT-токена
      parameters:
      - description: Данные для входа
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/model.UserLoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Токен
          schema:
            $ref: '#/definitions/model.UserLoginResponse'
        "400":
          description: Обработанная ошибка сервера
          schema:
            $ref: '#/definitions/model.ErrorResponse'
        "500":
          description: Внутренняя ошибка сервера
          schema:
            type: string
      summary: Вход пользователя
      tags:
      - Пользователь
  /user/logout:
    post:
      description: Выход пользователя из системы и удаление токена из куков
      produces:
      - application/json
      responses:
        "200":
          description: Успешный ответ
          schema:
            type: string
        "400":
          description: Обработанная ошибка сервера
          schema:
            $ref: '#/definitions/model.ErrorResponse'
        "500":
          description: Внутренняя ошибка сервера
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Выход пользователя
      tags:
      - Пользователь
  /user/register:
    post:
      consumes:
      - application/json
      description: Регистрация нового пользователя с предоставленной информацией.
      parameters:
      - description: Пользовательский объект в формате JSON
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/model.UserRegisterRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Токен
          schema:
            $ref: '#/definitions/model.UserLoginResponse'
        "400":
          description: Обработанная ошибка сервера
          schema:
            $ref: '#/definitions/model.ErrorResponse'
        "500":
          description: Внутренняя ошибка сервера
          schema:
            type: string
      summary: Регистрация нового пользователя.
      tags:
      - Пользователь
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
