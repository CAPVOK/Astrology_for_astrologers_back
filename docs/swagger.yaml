definitions:
  model.Planet:
    properties:
      airline:
        example: AirlineX
        type: string
      planet_code:
        example: ABC123
        type: string
      planet_id:
        type: integer
      planet_status:
        example: checked
        type: string
      planet_type:
        example: suitcase
        type: string
      owner_name:
        example: John Doe
        type: string
      pasport_details:
        example: "123456789"
        type: string
      photo:
        example: http://example.com/planet.jpg
        type: string
      size:
        example: large
        type: string
      weight:
        example: 23.5
        type: number
    type: object
  model.PlanetRequest:
    properties:
      airline:
        example: AirlineX
        type: string
      planet_code:
        example: ABC123
        type: string
      planet_type:
        example: suitcase
        type: string
      owner_name:
        example: John Doe
        type: string
      pasport_details:
        example: "123456789"
        type: string
      size:
        example: large
        type: string
      weight:
        example: 23.5
        type: number
    type: object
  model.PlanetsGetResponse:
    properties:
      planets:
        items:
          $ref: '#/definitions/model.Planet'
        type: array
      constellation_id:
        example: 1
        type: integer
    type: object
  model.ConstellationGetResponse:
    properties:
      planets:
        items:
          $ref: '#/definitions/model.Planet'
        type: array
      confirmation_date:
        type: string
      creation_date:
        type: string
      constellation_id:
        type: integer
      constellation_status:
        type: string
      flight_number:
        type: string
      formation_date:
        type: string
      full_name:
        type: string
    type: object
  model.ConstellationRequest:
    properties:
      confirmation_date:
        type: string
      creation_date:
        type: string
      constellation_id:
        type: integer
      constellation_status:
        type: string
      flight_number:
        type: string
      formation_date:
        type: string
      full_name:
        type: string
    type: object
  model.ConstellationUpdateFlightNumberRequest:
    properties:
      flight_number:
        type: string
    type: object
  model.ConstellationUpdateStatusRequest:
    properties:
      constellation_status:
        type: string
    type: object
  model.Role:
    enum:
    - пользователь
    - модератор
    type: string
    x-enum-varnames:
    - UserRole
    - ModeratorRole
  model.User:
    properties:
      email:
        type: string
      full_name:
        type: string
      password:
        type: string
      role:
        $ref: '#/definitions/model.Role'
      user_id:
        type: integer
    type: object
  model.UserLoginRequest:
    properties:
      email:
        type: string
      password:
        type: string
    type: object
  model.UserRegisterRequest:
    properties:
      email:
        type: string
      full_name:
        type: string
      password:
        type: string
    type: object
info:
  contact: {}
paths:
  /planet:
    get:
      description: Возращает список всех активных планетаей
      parameters:
      - description: Код планеты
        format: email
        in: query
        name: searchCode
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Список планетаей
          schema:
            $ref: '#/definitions/model.PlanetsGetResponse'
        "500":
          description: Ошибка сервера
          schema:
            $ref: '#/definitions/model.PlanetsGetResponse'
      summary: Получение списка планеты
      tags:
      - Планета
  /planet/{planet_id}:
    get:
      description: Возвращает информацию о планетае по его ID
      parameters:
      - description: ID планеты
        in: path
        name: planet_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Информация о планетае
          schema:
            $ref: '#/definitions/model.Planet'
        "400":
          description: Некорректный запрос
          schema:
            $ref: '#/definitions/model.Planet'
        "500":
          description: Внутренняя ошибка сервера
          schema:
            $ref: '#/definitions/model.Planet'
      summary: Получение планеты по ID
      tags:
      - Планета
  /planet/{planet_id}/delete:
    delete:
      description: Удаляет планета по его ID
      parameters:
      - description: ID планеты
        in: path
        name: planet_id
        required: true
        type: integer
      - description: Код планеты
        format: email
        in: query
        name: searchCode
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Список планетаей
          schema:
            $ref: '#/definitions/model.PlanetsGetResponse'
        "400":
          description: Некорректный запрос
          schema:
            $ref: '#/definitions/model.PlanetsGetResponse'
        "500":
          description: Внутренняя ошибка сервера
          schema:
            $ref: '#/definitions/model.PlanetsGetResponse'
      summary: Удаление планеты
      tags:
      - Планета
  /planet/{planet_id}/constellation:
    post:
      description: Добавляет планета к доставке по его ID
      parameters:
      - description: ID планеты
        in: path
        name: planet_id
        required: true
        type: integer
      - description: Код планеты
        format: email
        in: query
        name: searchCode
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Список планетаей
          schema:
            $ref: '#/definitions/model.PlanetsGetResponse'
        "400":
          description: Некорректный запрос
          schema:
            $ref: '#/definitions/model.PlanetsGetResponse'
        "500":
          description: Внутренняя ошибка сервера
          schema:
            $ref: '#/definitions/model.PlanetsGetResponse'
      summary: Добавление планеты к доставке
      tags:
      - Планета
  /planet/{planet_id}/image:
    post:
      consumes:
      - multipart/form-data
      description: Добавляет изображение к планетау по его ID
      parameters:
      - description: ID планеты
        in: path
        name: planet_id
        required: true
        type: integer
      - description: Изображение планеты
        in: formData
        name: image
        required: true
        type: file
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Planet'
        "400":
          description: Некорректный запрос
          schema:
            $ref: '#/definitions/model.Planet'
        "500":
          description: Внутренняя ошибка сервера
          schema:
            $ref: '#/definitions/model.Planet'
      summary: Добавление изображения к планетау
      tags:
      - Планета
  /planet/{planet_id}/update:
    put:
      consumes:
      - application/json
      description: Обновляет информацию о планетае по его ID
      parameters:
      - description: ID планеты
        in: path
        name: planet_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Информация о планетае
          schema:
            $ref: '#/definitions/model.Planet'
        "400":
          description: Некорректный запрос
          schema:
            $ref: '#/definitions/model.Planet'
        "500":
          description: Внутренняя ошибка сервера
          schema:
            $ref: '#/definitions/model.Planet'
      summary: Обновление информации о планетае
      tags:
      - Планета
  /planet/create:
    post:
      consumes:
      - application/json
      description: Создает новый планета с предоставленными данными
      parameters:
      - description: Код планеты
        format: email
        in: query
        name: searchCode
        type: string
      - description: Пользовательский объект в формате JSON
        in: body
        name: planet
        required: true
        schema:
          $ref: '#/definitions/model.PlanetRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Список планетаей
          schema:
            $ref: '#/definitions/model.PlanetsGetResponse'
        "400":
          description: Некорректный запрос
          schema:
            $ref: '#/definitions/model.PlanetsGetResponse'
        "500":
          description: Внутренняя ошибка сервера
          schema:
            $ref: '#/definitions/model.PlanetsGetResponse'
      summary: Создание нового планеты
      tags:
      - Планета
  /planets/{planet_id}/constellation:
    post:
      description: Удаляет планета из созвездия по его ID
      parameters:
      - description: ID планеты
        in: path
        name: planet_id
        required: true
        type: integer
      - description: Код планеты
        format: email
        in: query
        name: searchCode
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Список планетаей
          schema:
            $ref: '#/definitions/model.PlanetsGetResponse'
        "400":
          description: Некорректный запрос
          schema:
            $ref: '#/definitions/model.PlanetsGetResponse'
        "500":
          description: Внутренняя ошибка сервера
          schema:
            $ref: '#/definitions/model.PlanetsGetResponse'
      summary: Удаление планеты из созвездия
      tags:
      - Планета
  /constellation:
    get:
      description: Возвращает список всех не удаленных доставок
      parameters:
      - description: Номер рейса
        format: email
        in: query
        name: searchFlightNumber
        type: string
      - description: Начало даты формирования
        format: email
        in: query
        name: startFormationDate
        type: string
      - description: Конец даты формирования
        format: email
        in: query
        name: endFormationDate
        type: string
      - description: Статус созвездия
        format: email
        in: query
        name: constellationStatus
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Список доставок
          schema:
            $ref: '#/definitions/model.ConstellationRequest'
        "500":
          description: Ошибка сервера
          schema:
            $ref: '#/definitions/model.ConstellationRequest'
      summary: Получение списка доставок
      tags:
      - Созвездие
  /constellation/{id}:
    get:
      description: Возвращает информацию о доставке по её идентификатору
      parameters:
      - description: Идентификатор созвездия
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Информация о доставке
          schema:
            $ref: '#/definitions/model.ConstellationGetResponse'
        "400":
          description: Недопустимый идентификатор созвездия
          schema:
            $ref: '#/definitions/model.ConstellationGetResponse'
        "500":
          description: Ошибка сервера
          schema:
            $ref: '#/definitions/model.ConstellationGetResponse'
      summary: Получение созвездия по идентификатору
      tags:
      - Созвездие
  /constellation/{id}/delete:
    delete:
      description: Удаляет доставку по её идентификатору
      parameters:
      - description: Идентификатор созвездия
        in: path
        name: id
        required: true
        type: integer
      - description: Номер рейса
        format: email
        in: query
        name: searchFlightNumber
        type: string
      - description: Начало даты формирования
        format: email
        in: query
        name: startFormationDate
        type: string
      - description: Конец даты формирования
        format: email
        in: query
        name: endFormationDate
        type: string
      - description: Статус созвездия
        format: email
        in: query
        name: constellationStatus
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Список планетаей
          schema:
            $ref: '#/definitions/model.ConstellationRequest'
        "400":
          description: Недопустимый идентификатор созвездия
          schema:
            $ref: '#/definitions/model.ConstellationRequest'
        "500":
          description: Ошибка сервера
          schema:
            $ref: '#/definitions/model.ConstellationRequest'
      summary: Удаление созвездия
      tags:
      - Созвездие
  /constellation/{id}/status:
    put:
      description: Обновляет статус созвездия для модератора по идентификатору созвездия
      parameters:
      - description: Идентификатор созвездия
        in: path
        name: id
        required: true
        type: integer
      - description: Новый статус созвездия
        in: body
        name: constellationStatus
        required: true
        schema:
          $ref: '#/definitions/model.ConstellationUpdateStatusRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Информация о доставке
          schema:
            $ref: '#/definitions/model.ConstellationGetResponse'
        "400":
          description: Недопустимый идентификатор созвездия или ошибка чтения JSON
            объекта
          schema:
            $ref: '#/definitions/model.ConstellationGetResponse'
        "500":
          description: Ошибка сервера
          schema:
            $ref: '#/definitions/model.ConstellationGetResponse'
      summary: Обновление статуса созвездия для модератора
      tags:
      - Созвездие
  /constellation/{id}/update:
    put:
      description: Обновляет номер рейса для созвездия по её идентификатору
      parameters:
      - description: Идентификатор созвездия
        in: path
        name: id
        required: true
        type: integer
      - description: Новый номер рейса
        in: body
        name: flightNumber
        required: true
        schema:
          $ref: '#/definitions/model.ConstellationUpdateFlightNumberRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Информация о доставке
          schema:
            $ref: '#/definitions/model.ConstellationGetResponse'
        "400":
          description: Недопустимый идентификатор созвездия или ошибка чтения JSON
            объекта
          schema:
            $ref: '#/definitions/model.ConstellationGetResponse'
        "500":
          description: Ошибка сервера
          schema:
            $ref: '#/definitions/model.ConstellationGetResponse'
      summary: Обновление номера рейса созвездия
      tags:
      - Созвездие
  /constellation/{id}/user:
    put:
      description: Обновляет статус созвездия для пользователя по идентификатору созвездия
      parameters:
      - description: Идентификатор созвездия
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Информация о доставке
          schema:
            $ref: '#/definitions/model.ConstellationGetResponse'
        "400":
          description: Недопустимый идентификатор созвездия
          schema:
            $ref: '#/definitions/model.ConstellationGetResponse'
        "500":
          description: Ошибка сервера
          schema:
            $ref: '#/definitions/model.ConstellationGetResponse'
      summary: Обновление статуса созвездия для пользователя
      tags:
      - Созвездие
  /user/:
    get:
      description: Получение данных пользователя по его идентификатору
      produces:
      - application/json
      responses:
        "200":
          description: Успешный ответ
          schema:
            items:
              $ref: '#/definitions/model.User'
            type: array
        "400":
          description: Неверный запрос
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Внутренняя ошибка сервера
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Получить пользователя по идентификатору
  /user/login:
    post:
      consumes:
      - application/json
      description: Авторизация пользователя и генерация JWT-токена
      parameters:
      - description: Данные для входа
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/model.UserLoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Успешный ответ
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Неверный запрос
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Внутренняя ошибка сервера
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Вход пользователя
      tags:
      - Пользователь
  /user/logout:
    post:
      description: Выход пользователя из системы и удаление токена из куков
      produces:
      - application/json
      responses:
        "200":
          description: Успешный ответ
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Неверный запрос
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Внутренняя ошибка сервера
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Выход пользователя
      tags:
      - Пользователь
  /user/refreshtoken:
    post:
      description: Обновление пары токенов
      produces:
      - application/json
      responses:
        "200":
          description: Успешный ответ
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Неверный запрос
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Внутренняя ошибка сервера
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Обновление токенов
      tags:
      - Пользователь
  /user/register:
    post:
      consumes:
      - application/json
      description: Регистрация нового пользователя с предоставленной информацией.
      parameters:
      - description: Пользовательский объект в формате JSON
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/model.UserRegisterRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Успешно зарегистрированный пользователь
          schema:
            items:
              $ref: '#/definitions/model.User'
            type: array
      summary: Регистрация нового пользователя.
      tags:
      - Пользователь
swagger: "2.0"
